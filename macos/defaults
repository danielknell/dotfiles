#!/bin/bash

DOTFILES_PATH=$(dirname $(dirname $0))
WALLPAPER="${DOTFILES_PATH}/desktop/wallpaper.jpg"

# General
################################################################################

echo "› sane saving / printing"

defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

echo "› disable the app quarantine"
defaults write com.apple.LaunchServices LSQuarantine -bool false

echo "› restart on freeze"
sudo systemsetup -setrestartfreeze on

echo "› password protect screen saver"
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

echo "› save screenshots as png to documents folder"
defaults write com.apple.screencapture type -string "png"
defaults write com.apple.screencapture location -string "${HOME}/Documents"
defaults write com.apple.screencapture disable-shadow -bool true

echo "› subpixel rendering on non-apple screens"
defaults write NSGlobalDomain AppleFontSmoothing -int 2

echo "› faster key repeat"
defaults write -g ApplePressAndHoldEnabled -bool false
defaults write NSGlobalDomain KeyRepeat -int 1

echo "› enable firewall"
sudo defaults write /Library/Preferences/com.apple.alf globalstate -int 1
sudo launchctl load /System/Library/LaunchDaemons/com.apple.alf.agent.plist 2>/dev/null

echo "› display login message"
sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "contact@danielknell.co.uk"

# App Store
################################################################################

echo "› check for updates daily"
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

echo "› download in the background"
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

echo "› install security updates"
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

echo "› auto-update applications"
defaults write com.apple.commerce AutoUpdate -bool true

# Safari
################################################################################

echo "› developer menu and webkit inspector"
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

echo "› disable plug-ins and applets"
defaults write com.apple.Safari WebKitPluginsEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false
defaults write com.apple.Safari WebKitJavaEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false

echo "› block popups"
defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

echo "› do not track"
defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

# Finder
################################################################################

echo "› allow quitting finder"
defaults write com.apple.finder QuitMenuItem -bool true

echo "› disable get info animations"
defaults write com.apple.finder DisableAllAnimations -bool true

echo "› default to documents"
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Documents/"

echo "› no icons on the desktop"
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false

echo "› show file extensions"
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

echo "› search current folder"
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

echo "› fast directory spring loading"
defaults write NSGlobalDomain com.apple.springing.enabled -bool true
defaults write NSGlobalDomain com.apple.springing.delay -float 0

echo "› no .DS_Store on network volumes"
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

echo "› list view by default"
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

echo "› no warning on emptying trash"
defaults write com.apple.finder WarnOnEmptyTrash -bool false

echo "› airdrop over ethernet"
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

echo "› clean up dock"
defaults write com.apple.dock tilesize -int 40
defaults write com.apple.dock mineffect -string "scale"
defaults write com.apple.dock minimize-to-application -bool true
defaults write com.apple.dock show-process-indicators -bool false
defaults write com.apple.dock showhidden -bool true
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

echo "› only show open applications"
defaults write com.apple.dock static-only -bool true

echo "› don’t animate opening applications from the Dock"
defaults write com.apple.dock launchanim -bool false

echo "› setup mission control"
defaults write com.apple.dock expose-animation-duration -float 0.1
defaults write com.apple.dock expose-group-by-app -bool false
defaults write com.apple.dock mru-spaces -bool false

echo "› disable dashboard"
defaults write com.apple.dashboard mcx-disabled -bool true
defaults write com.apple.dock dashboard-in-overlay -bool true

echo "› autohide dock"
defaults write com.apple.dock autohide -bool true
defaults write com.apple.dock autohide-delay -float 0
defaults write com.apple.dock autohide-time-modifier -float 0

echo "› set desktop wallpaper"
osascript -e "tell application \"Finder\" to set desktop picture to POSIX file \"${WALLPAPER}\""

echo "› set screen saver"
defaults -currentHost write com.apple.screensaver moduleDict -dict \
  path -string "/Users/daniel/Library/Screen Savers/Aerial.saver" \
  moduleName -string "Aerial" \
  type -int 0

echo "› reload the dock"
killall Dock > /dev/null 2>&1

# Input devices
###############################################################################

echo "› enable tap to click"
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

echo "› set enable right tap"
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

echo "› allow keyboard control in more uis"
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

echo "› enable zooming"
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

echo "› setup key repeat"
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 10

echo "› disable itunes media keys"
launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

killall cfprefsd